{"version":3,"sources":["components/Loading/Loader.js","reducers/settings.js","reducers/index.js","store/configureStore.js","components/ScrollToTop/index.js","components/themes/lightTheme.js","components/themes/darkTheme.js","components/themes/grayTheme.js","components/App.js","components/Root.js","serviceWorker.js","index.js","constants/actionTypes.js","constants/appConfig.js","components/Loading/index.js"],"names":["__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0___default","a","createElement","className","width","height","viewBox","xmlns","fill","strokeWidth","strokeLinecap","cx","cy","r","initialSettings","appConfig","settings","reducers_settings","state","arguments","length","undefined","action","type","actionTypes","_objectSpread","layoutBoxed","isLayoutBoxed","navCollapsed","isNavCollapsed","navBehind","isNavBehind","fixedHeader","isFixedHeader","sidebarWidth","colorOption","theme","reducers","routing","react_router_redux_es","src_reducers","Object","redux","configureStore_history","createHashHistory_default","store_configureStore","initialState","reactRouterMiddleware","middlewares","es","applyMiddleware","ScrollToTop","prevProps","this","props","location","window","scrollTo","children","react_default","Component","components_ScrollToTop","withRouter","lightTheme","styles","palette","primary","main","colors","dark","contrastText","secondary","darkTheme","grayTheme","MainApp","lib_default","loader","Promise","all","__webpack_require__","e","then","bind","loading","Loading","MainAdmin","Exception","Account","PageFullscreen","App_App","App","_this","App_classCallCheck","App_possibleConstructorReturn","App_getPrototypeOf","call","axios_progress_bar_dist","materialUITheme","_this$props","match","isRoot","pathname","react_localstorage","get","Redirect","to","id","classnames_default","fixed-header","nav-collapsed","nav-behind","layout-boxed","theme-gray","theme-dark","sidebar-sm","sidebar-lg","Route","path","concat","url","component","exact","react","components_App","react_redux_es","ownProps","Root_Root","store","history","Boolean","hostname","src_store","react_dom","react_hot_loader","document","getElementById","navigator","serviceWorker","ready","registration","unregister","TOGGLE_BOXED_LAYOUT","TOGGLE_COLLAPSED_NAV","TOGGLE_NAV_BEHIND","TOGGLE_FIXED_HEADER","CHANGE_SIDEBAR_WIDTH","CHANGE_COLOR_OPTION","CHANGE_THEME","APPCONFIG","brand","user","year","Date","getFullYear","AutoCloseMobileNav","showCustomizer","color","success","info","infoAlt","warning","danger","text","gray","error","pastDelay","_Loader__WEBPACK_IMPORTED_MODULE_1__"],"mappings":"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","file":"static/js/main.a7bf93c1.chunk.js","sourcesContent":["import React from 'react';\nimport './loader.scss';\n\nconst Loader = () => (\n  <svg className=\"spinner\" width=\"60px\" height=\"60px\" viewBox=\"0 0 60 60\" xmlns=\"http://www.w3.org/2000/svg\">\n    <circle className=\"path\" fill=\"none\" strokeWidth=\"4\" strokeLinecap=\"round\" cx=\"30\" cy=\"30\" r=\"28\"></circle>\n  </svg>\n)\n\nexport default Loader;","import APPCONFIG from 'constants/appConfig';\nimport {\n  TOGGLE_BOXED_LAYOUT,\n  TOGGLE_COLLAPSED_NAV,\n  TOGGLE_NAV_BEHIND,\n  TOGGLE_FIXED_HEADER,\n  CHANGE_SIDEBAR_WIDTH,\n  CHANGE_COLOR_OPTION,\n  CHANGE_THEME\n} from '../constants/actionTypes';\n\nconst initialSettings = APPCONFIG.settings;\n\nconst settings = (state = initialSettings, action) => {\n    // console.log(action)\n  switch (action.type) {\n    case TOGGLE_BOXED_LAYOUT:\n      return {\n        ...state,\n        layoutBoxed: action.isLayoutBoxed\n      };\n    case TOGGLE_COLLAPSED_NAV:\n      return {\n        ...state,\n        navCollapsed: action.isNavCollapsed\n      };\n    case TOGGLE_NAV_BEHIND:\n      return {\n        ...state,\n        navBehind: action.isNavBehind\n      };\n    case TOGGLE_FIXED_HEADER:\n      return {\n        ...state,\n        fixedHeader: action.isFixedHeader\n      };\n    case CHANGE_SIDEBAR_WIDTH:\n      return {\n        ...state,\n        sidebarWidth: action.sidebarWidth\n      };\n    case CHANGE_COLOR_OPTION:\n      return {\n        ...state,\n        colorOption: action.colorOption\n      };\n    case CHANGE_THEME:\n      return {\n        ...state,\n        theme: action.theme\n      };\n    default:\n      return state;\n  }\n};\n\nexport default settings;\n","import { combineReducers } from 'redux';\nimport { routerReducer } from 'react-router-redux';\nimport settings from './settings';\n\nconst reducers = {\n  routing: routerReducer,\n  settings\n};\n\nexport default combineReducers(reducers);\n","import {createStore, compose, applyMiddleware} from 'redux';\nimport reduxImmutableStateInvariant from 'redux-immutable-state-invariant';\nimport thunk from 'redux-thunk';\nimport createHistory from 'history/createHashHistory';\n// 'routerMiddleware': the new way of storing route changes with redux middleware since rrV4.\nimport { routerMiddleware } from 'react-router-redux';\nimport rootReducer from '../reducers';\nexport const history = createHistory();\nfunction configureStoreProd(initialState) {\n  const reactRouterMiddleware = routerMiddleware(history);\n  const middlewares = [\n    // Add other middleware on this line...\n\n    // thunk middleware can also accept an extra argument to be passed to each thunk action\n    // https://github.com/gaearon/redux-thunk#injecting-a-custom-argument\n    thunk,\n    reactRouterMiddleware,\n  ];\n\n  return createStore(rootReducer, initialState, compose(\n    applyMiddleware(...middlewares)\n    )\n  );\n}\n\nfunction configureStoreDev(initialState) {\n  const reactRouterMiddleware = routerMiddleware(history);\n  const middlewares = [\n    // Add other middleware on this line...\n\n    // Redux middleware that spits an error on you when you try to mutate your state either inside a dispatch or between dispatches.\n    reduxImmutableStateInvariant(),\n\n    // thunk middleware can also accept an extra argument to be passed to each thunk action\n    // https://github.com/gaearon/redux-thunk#injecting-a-custom-argument\n    thunk,\n    reactRouterMiddleware,\n  ];\n\n  const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose; // add support for Redux dev tools\n  const store = createStore(rootReducer, initialState, composeEnhancers(\n    applyMiddleware(...middlewares)\n    )\n  );\n\n  return store;\n}\n\nconst configureStore = process.env.NODE_ENV === 'production' ? configureStoreProd : configureStoreDev;\n\nexport default configureStore;\n","import React from 'react';\nimport { withRouter } from 'react-router';\n\nclass ScrollToTop extends React.Component {\n  componentDidUpdate(prevProps) {\n    if (this.props.location !== prevProps.location) {\n      window.scrollTo(0, 0)\n    }\n  }\n\n  render() {\n    return this.props.children\n  }\n}\n\nexport default withRouter(ScrollToTop);","import { createMuiTheme } from '@material-ui/core/styles';\nimport { cyan, green } from '@material-ui/core/colors';\n\nconst theme = createMuiTheme({\n  palette: {\n    type: 'light',\n    primary: {\n      // light: will be calculated from palette.primary.main,\n      main: cyan[500],\n      dark: cyan[700],\n      contrastText: '#fff',\n    },\n    secondary: {\n      main: green[400],\n      // dark: will be calculated from palette.secondary.main,\n      contrastText: '#fff',\n    },\n    // error: will use the default color\n  }\n});\n\nexport default theme;\n","import { createMuiTheme } from '@material-ui/core/styles';\nimport { cyan, green } from '@material-ui/core/colors';\n\nconst theme = createMuiTheme({\n  palette: {\n    type: 'dark',\n    primary: {\n      // light: will be calculated from palette.primary.main,\n      main: cyan[700],\n      contrastText: 'rgba(255,255,255,.7)',\n    },\n    secondary: {\n      main: green[600],\n      // dark: will be calculated from palette.secondary.main,\n      contrastText: 'rgba(255,255,255,.7)',\n    },\n    // error: will use the default color\n  },\n});\n\nexport default theme;\n","import { createMuiTheme } from '@material-ui/core/styles';\nimport { cyan, green } from '@material-ui/core/colors';\n\nconst theme = createMuiTheme({\n  palette: {\n    type: 'dark',\n    primary: {\n      // light: will be calculated from palette.primary.main,\n      main: cyan[700],\n      contrastText: 'rgba(255,255,255,.7)',\n    },\n    secondary: {\n      main: green[600],\n      // dark: will be calculated from palette.secondary.main,\n      contrastText: 'rgba(255,255,255,.7)',\n    },\n    // error: will use the default color\n  }\n});\n\nexport default theme;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport classnames from 'classnames';\nimport { MuiThemeProvider } from '@material-ui/core/styles';\nimport { Route, Redirect } from 'react-router-dom';\nimport loadable from 'react-loadable';\nimport LoadingComponent from 'components/Loading';\nimport {reactLocalStorage} from 'reactjs-localstorage';\nimport { loadProgressBar } from 'axios-progress-bar';\nimport 'axios-progress-bar/dist/nprogress.css';\n// = styles =\n// 3rd\nimport 'styles/bootstrap/bootstrap.scss';\n// custom\nimport 'styles/layout.scss';\nimport 'styles/theme.scss';\nimport 'styles/ui.scss';\n\nimport lightTheme from './themes/lightTheme';\nimport darkTheme from './themes/darkTheme';\nimport grayTheme from './themes/grayTheme';\n\nlet MainApp = loadable({\n  loader: () => import('components/Layout/AppLayout/MainApp'),\n  loading: LoadingComponent\n})\nlet MainAdmin = loadable({\n  loader: () => import('components/Layout/AppLayout/MainAdmin'),\n  loading: LoadingComponent\n})\nlet Exception = loadable({\n  loader: () => import('routes/exception/'),\n  loading: LoadingComponent\n})\nlet Account = loadable({\n  loader: () => import('routes/user/'),\n  loading: LoadingComponent\n})\nlet PageFullscreen = loadable({\n  loader: () => import('routes/fullscreen/'),\n  loading: LoadingComponent\n})\n\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    loadProgressBar();\n  }\n  componentDidMount() {}\n\n  render() {\n    const { match, location, layoutBoxed, navCollapsed, navBehind, fixedHeader, sidebarWidth, theme } = this.props;\n    let materialUITheme;\n    switch (theme) {\n      case 'gray':\n        materialUITheme = grayTheme;\n        break;\n      case 'dark':\n        materialUITheme = darkTheme;\n        break;\n      default:\n        materialUITheme = lightTheme;\n    }\n\n    const isRoot = location.pathname === '/' ? true : false;\n    if (isRoot && (reactLocalStorage.get('auth') === '' || reactLocalStorage.get('auth') === undefined)) {\n      return ( <Redirect to={'/user/login'}/> );\n    }\n    else if(isRoot && (reactLocalStorage.get('auth') !== '')){\n      return ( <Redirect to={'/admin'}/> );\n    }\n    else if(location.pathname !== '/user/login' && (reactLocalStorage.get('auth') === '' || reactLocalStorage.get('auth') === undefined)){\n      return ( <Redirect to={'/user/login'}/> );  \n    }\n\n    return (\n      <MuiThemeProvider theme={materialUITheme}>\n        <div id=\"app-inner\">\n          <div className=\"preloaderbar hide\"><span className=\"bar\" /></div>\n          <div\n            className={classnames('app-main h-100', {\n              'fixed-header': fixedHeader,\n              'nav-collapsed': navCollapsed,\n              'nav-behind': navBehind,\n              'layout-boxed': layoutBoxed,\n              'theme-gray': theme === 'gray',\n              'theme-dark': theme === 'dark',\n              'sidebar-sm': sidebarWidth === 'small',\n              'sidebar-lg': sidebarWidth === 'large'})\n          }>\n            <Route path={`${match.url}admin`} component={MainAdmin} />\n            <Route path={`${match.url}app`} component={MainApp} />\n            <Route path={`${match.url}exception`} component={Exception} />\n            <Route path={`${match.url}user`} component={Account} />\n            <Route exact path=\"/fullscreen\" component={PageFullscreen} />\n          </div>\n        </div>\n      </MuiThemeProvider>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n  layoutBoxed: state.settings.layoutBoxed,\n  navCollapsed: state.settings.navCollapsed,\n  navBehind: state.settings.navBehind,\n  fixedHeader: state.settings.fixedHeader,\n  sidebarWidth: state.settings.sidebarWidth,\n  theme: state.settings.theme,\n});\n\nexport default connect(\n  mapStateToProps\n)(App);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { ConnectedRouter } from 'react-router-redux';\nimport { Provider } from 'react-redux';\nimport { Route } from 'react-router-dom';\nimport ScrollToTop from 'components/ScrollToTop';\nimport App from './App';\n\nexport default class Root extends Component {\n  render() {\n    const { store, history } = this.props;\n    return (\n      <Provider store={store}>\n        <ConnectedRouter history={history}>\n          <ScrollToTop>\n            <Route path=\"/\" component={App} />\n          </ScrollToTop>\n        </ConnectedRouter>\n      </Provider>\n    );\n  }\n}\n\nRoot.propTypes = {\n  store: PropTypes.object.isRequired,\n  history: PropTypes.object.isRequired\n};\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { AppContainer } from 'react-hot-loader';\nimport configureStore, { history } from './store/configureStore';\nimport Root from './components/Root';\nimport * as serviceWorker from './serviceWorker';\nconst store = configureStore();\n\n\nrender(\n  <AppContainer>\n    <Root store={store} history={history} />\n  </AppContainer>,\n  document.getElementById('root')\n);\n\nif (module.hot) {\n  module.hot.accept('./components/Root', () => {\n    const NewRoot = require('./components/Root').default;\n    render(\n      <AppContainer>\n        <NewRoot store={store} history={history} />\n      </AppContainer>,\n      document.getElementById('root')\n    );\n  });\n}\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","export const TOGGLE_BOXED_LAYOUT = 'TOGGLE_BOXED_LAYOUT';\nexport const TOGGLE_COLLAPSED_NAV = 'TOGGLE_COLLAPSED_NAV';\nexport const TOGGLE_NAV_BEHIND = 'TOGGLE_NAV_BEHIND';\nexport const TOGGLE_FIXED_HEADER = 'TOGGLE_FIXED_HEADER';\nexport const CHANGE_SIDEBAR_WIDTH = 'CHANGE_SIDEBAR_WIDTH';\nexport const CHANGE_COLOR_OPTION = 'CHANGE_COLOR_OPTION';\nexport const CHANGE_THEME = 'CHANGE_THEME';\n","const date = new Date();\nconst year = date.getFullYear();\n\nconst APPCONFIG = {\n  brand: 'Login Area',\n  user: 'Lisa',\n  year,\n  AutoCloseMobileNav: true,          // true, false. Automatically close sidenav on route change (Mobile only)\n  showCustomizer: true,              // Boolean: true, false. Customizer will be opened (visible) first time app was loaded if set to true\n  color: {\n    primary: '#00BCD4',\n    success: '#8BC34A',\n    info: '#66BB6A',\n    infoAlt: '#7E57C2',\n    warning: '#FFCA28',\n    danger: '#F44336',\n    text: '#3D4051',\n    gray: '#EDF0F1'\n  },\n  settings: {\n    layoutBoxed: false,               // true, false\n    navCollapsed: false,              // true, false\n    navBehind: false,                 // true, false\n    fixedHeader: true,                // true, false\n    sidebarWidth: 'middle',           // small, middle, large\n    colorOption: '14',                // String: 11,12,13,14,15,16; 21,22,23,24,25,26; 31,32,33,34,35,36\n    theme: 'light',                   // light, gray, dark\n  }\n};\n\nexport default APPCONFIG;\n","import React from 'react';\nimport Loader from './Loader';\n\nfunction Loading(props) {\n  if (props.error) {\n    return <div className=\"loader-container\">Error! Please refresh the page</div>;\n  } else if (props.pastDelay) {\n    return <div className=\"loader-container\"> <Loader /> </div>;\n  } else {\n    return null; // Avoiding Flash Of Loading Component (<200ms)\n  }\n}\n\nexport default Loading;"],"sourceRoot":""}