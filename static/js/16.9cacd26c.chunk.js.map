{"version":3,"sources":["routes/admin/routes/slide/slidetopedit/components/SlideTopEdit.js","routes/admin/routes/slide/slidetopedit/index.js"],"names":["SlideTopEdit_SlideTopEdit","SlideTopEdit","props","_this","_classCallCheck","this","_getPrototypeOf","call","handleChange","event","setState","target","name","value","handleEditorChange","e","descriptionweb","getContent","slideHandle","id","match","params","token","react_localstorage","get","AuthStr","concat","axios_default","a","headers","Authorization","then","response","datas","data","link","position","catch","error","console","log","submitHandler","payload","file","state","placement","put","preventDefault","show","bind","_assertThisInitialized","prevProps","files","type","image","base64","img","document","createElement","setAttribute","setTimeout","height","width","titlealert","textalert","jquery_default","val","_this2","classes","_this$state","replace","includes","react_default","Redirect","to","className","sweetalert_react_min_default","title","text","onConfirm","onSubmit","htmlFor","src","build_min_default","multiple","onDone","getFiles","Input_default","inputProps","onChange","placeholder","multiline","fullWidth","TextField_default","margin","selectEmpty","Button_default","variant","react","components_SlideTopEdit","Object","styles","theme","root","display","flexWrap","formControl","spacing","unit","minWidth","marginTop","__webpack_exports__"],"mappings":"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","file":"static/js/16.9cacd26c.chunk.js","sourcesContent":["import React,{Component} from 'react';\r\nimport axios from 'axios';\r\nimport {Redirect} from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport {reactLocalStorage} from 'reactjs-localstorage';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Input from '@material-ui/core/Input';\r\nimport FileBase64 from 'react-file-base64';\r\nimport SweetAlert from 'sweetalert2-react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport $ from 'jquery';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n      display: 'flex',\r\n      flexWrap: 'wrap',\r\n    },\r\n    formControl: {\r\n      margin: theme.spacing.unit,\r\n      minWidth: 150,\r\n    },\r\n    selectEmpty: {\r\n      marginTop: theme.spacing.unit * 0,\r\n    },\r\n  });\r\nclass SlideTopEdit extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            placement : \"Top Slide\",\r\n            link : \"\",\r\n            file : \"\",\r\n            show : false,\r\n            position : \"\",\r\n            id : this.props.match.params.id\r\n        }\r\n        this.slideHandle = this.slideHandle.bind(this);\r\n        this.slideHandle();\r\n    }\r\n    \r\n    handleChange = event => {\r\n        this.setState({ [event.target.name]: event.target.value });\r\n    };\r\n\r\n    handleEditorChange = (e) => {\r\n        this.setState({\r\n            descriptionweb : e.target.getContent()\r\n        }) \r\n    }\r\n\r\n    slideHandle = () => {\r\n        let id = this.props.match.params.id;\r\n        let token= reactLocalStorage.get('auth');\r\n        let AuthStr = \"Bearer \".concat(token);\r\n        axios.get('http://13.229.249.101/dashboard/api/slide/view/'+id, { headers: { Authorization: AuthStr } })\r\n        .then(response => {\r\n            const datas = response.data;\r\n            this.setState({\r\n                link : datas.link,\r\n                position : datas.position\r\n            })\r\n        })\r\n        .catch((error) => {\r\n            console.log('error ' + error);\r\n        });\r\n    }\r\n\r\n    componentDidUpdate(prevProps){\r\n        if(prevProps.match.params.id !== this.props.match.params.id){\r\n             this.slideHandle();\r\n             let id = this.props.match.params.id;\r\n             this.setState({\r\n                 id : id\r\n             });\r\n             \r\n        }\r\n     }\r\n\r\n    submitHandler = (event) => {\r\n        const payload = {\r\n            \"file\" : this.state.file,\r\n            \"placement\": this.state.placement,\r\n            \"link\": this.state.link,\r\n            \"position\" : this.state.position,\r\n            \"id\" : this.state.id\r\n        }\r\n        let token= reactLocalStorage.get('auth');\r\n        const AuthStr = \"Bearer \".concat(token); \r\n        axios.put('http://13.229.249.101/dashboard/api/slide/edit', payload, { headers: { Authorization: AuthStr } })\r\n        .then((response) => {\r\n            this.slideHandle();\r\n        })\r\n        .catch((error) => {\r\n            console.log(error);\r\n        });  \r\n        event.preventDefault();    \r\n    }\r\n\r\n    getFiles(files){\r\n        if(files.type == \"image/jpeg\"){\r\n            var image = files.base64;\r\n            var img = document.createElement(\"img\")\r\n            img.setAttribute(\"src\", image)\r\n            setTimeout(\r\n                function() {\r\n                    if(img.height == 785 && img.width == 1600){\r\n                        this.setState({ \"file\" :  files.base64 });\r\n                    }\r\n                    else{\r\n                        this.setState({\r\n                            show: true, \r\n                            titlealert: \"Image Size Failed\", \r\n                            textalert : \"Image Size 1600px X 785px\"\r\n                        })\r\n                        $(\"input[type='file']\").val(\"\");\r\n                    }\r\n                }\r\n                .bind(this),\r\n                0\r\n            );\r\n        }\r\n        else{\r\n            this.setState({\r\n                show: true, \r\n                titlealert: \"Image Type Failed\", \r\n                textalert : \"Image Type Must .Jpg\"\r\n            });\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const { classes } = this.props;\r\n        const { placement, id } = this.state;\r\n        const image = placement.replace(\" \",\"\")+'-'+id+\".jpg\";\r\n        let page = \"slide_edit\";\r\n        let role = reactLocalStorage.get('role');\r\n        let edit = role.includes(page);\r\n\r\n        return(\r\n            edit === false ?<Redirect to=\"/admin\" /> :\r\n            <article className=\"article\">\r\n            <SweetAlert\r\n                show = {this.state.show}\r\n                title = {this.state.titlealert}\r\n                text = {this.state.textalert}\r\n                onConfirm={() => \r\n                    this.setState({ show: false, titlealert: \"\", textalert : \"\" })\r\n                }\r\n            />\r\n                <div className=\"box-default m-3\">\r\n                <div className=\"box-body py-5\">\r\n                    <div className=\"form-group\">\r\n                        <h6>Edit Slide Top</h6>\r\n                    </div>\r\n                    <form  onSubmit={this.submitHandler}>\r\n                    \r\n                    <div className=\"form-group row\">\r\n                        \r\n                        <label htmlFor=\"inputName2\" className=\"col-md-2 col-form-label\">Slide Top Image</label>\r\n                        <div className=\"col-md-10\">\r\n                        <img src={\"http://13.229.249.101/dashboard/api/web/uploads/slide/\"+image} width=\"150\"></img><br/>\r\n                            <FileBase64\r\n                            multiple={ false }\r\n                            onDone={ this.getFiles.bind(this) }\r\n                            className=\"w-100\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-group row\">\r\n                        <label htmlFor=\"inputName2\" className=\"col-md-2 col-form-label\">Link</label>\r\n                        <div className=\"col-md-10\">\r\n                        <Input\r\n                            inputProps={{name: 'link'}}\r\n                            onChange={this.handleChange}\r\n                            value={this.state.link}\r\n                            placeholder=\"Link Slide Top\"\r\n                            multiline\r\n                            id=\"inputName2\"\r\n                            fullWidth\r\n                            className=\"mt-0\"\r\n                        />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-group row\">\r\n                        <label htmlFor=\"inputName2\" className=\"col-md-2 col-form-label\">Position</label>\r\n                        <div className=\"col-md-10\">\r\n                        <TextField\r\n                            id=\"standard-number\"\r\n                            value={this.state.position}\r\n                            onChange={this.handleChange}\r\n                            type=\"number\"\r\n                            inputProps={{name: 'position'}}\r\n                            margin=\"normal\"\r\n                            className={classes.selectEmpty}\r\n                        />\r\n                        </div>\r\n                    </div>\r\n                    \r\n\r\n                    <div className=\"form-group row\">\r\n                        <div className=\"col-md-2\"></div>\r\n                        <div className=\"col-md-10\">\r\n                        <Button variant=\"contained\" className=\"btn-w-md\" type=\"submit\"> Submit </Button>\r\n                        </div>\r\n                    </div>\r\n                    </form>\r\n\r\n                </div>\r\n                </div>\r\n            </article>\r\n        )\r\n    }\r\n}\r\nSlideTopEdit.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n  };\r\nexport default  withStyles(styles)(SlideTopEdit);","import SlideTopEdit from './components/SlideTopEdit';\r\n\r\nexport default SlideTopEdit;\r\n"],"sourceRoot":""}